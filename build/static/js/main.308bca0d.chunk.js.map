{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","placeholder","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAYeA,G,MATF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAOC,EAAuB,EAAvBA,iBACbC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,wBAAIC,UAAU,QAAd,eAAkCJ,EAAKK,QACnC,4BAAQC,QAASL,GAAmBC,M,gBCUjC,EAdA,WAEX,OADgBK,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EAJA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCA9BK,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OAAKA,EAKD,yBAAKb,UAAU,SACVa,GALE,OCWAC,EAfA,WAOX,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKN,6BACA,mGCgEGC,EAtEH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,IAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACNC,IAAqB1B,MAAK,SAAA2B,GACtBT,EAASS,QAEd,IAaHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAoBMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAEhE,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcc,QAASe,IACvB,6BACI,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,SAAoDA,EAAU,YAAc,QAEhF,4BACKJ,EAAQc,EAAYE,KAAI,SAAA1C,GAAI,OAAI,kBAAC,EAAD,CAAM2C,IAAK3C,EAAKc,GAAId,KAAMA,EAAMC,iBAAkB,kBA3CpE,SAAAa,GACvB,IAAMd,EAAO0B,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAOA,KAChCgC,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EAAmBrB,EAAIgC,GAAarC,MAAK,SAAAsC,GACrCpB,EAASD,EAAMgB,KAAI,SAAA1C,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO+C,SACpDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OAAUjC,EAAKK,QAAf,sCACf6C,YAAW,WAAOjB,EAAgB,QAAQ,QAmCmDkB,CAAmBnD,EAAKc,UAAW,MAEhI,0BAAMsC,SAhCE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflD,QAASuB,EACT4B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAE/BzB,EAAmBoB,GAAY9C,MAAK,SAAAsC,GAChCpB,EAASD,EAAMmC,OAAOd,IACtBlB,EAAW,SAwBP,2BACIiC,YAAa,oBACbC,MAAOnC,EACPoC,SArBS,SAACX,GACtBhB,QAAQC,IAAIe,EAAMY,OAAOF,OACzBlC,EAAWwB,EAAMY,OAAOF,UAoBhB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MC/DZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.308bca0d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Note.css'\r\n\r\nconst Note = ({ note , toggleImportance }) => {\r\n    const label = note.important ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note;","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nexport default { getAll, create, update }","import React from \"react\";\r\nimport './Notification.css'\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification ;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, for practicing React, MongoDB, node, express and Heroku</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react'\r\nimport Note from \"./components/Note\";\r\nimport noteService from './services/notes'\r\nimport Notification from \"./components/Notification\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('' )\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        noteService.getAll().then(initialNotes => {\r\n            setNotes(initialNotes)\r\n        })\r\n    }, [])\r\n\r\n    const toggleImportanceOf = id => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService.update(id, changedNote).then(returnedNote => {\r\n            setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n        }).catch(error => {\r\n            setErrorMessage(`Note '${note.content}' was already removed from server` )\r\n            setTimeout(() => {setErrorMessage(null) },5000)\r\n        })\r\n    }\r\n    console.log('render', notes.length, 'notes')\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5\r\n        }\r\n        noteService.create(noteObject).then(returnedNote => {\r\n            setNotes(notes.concat(returnedNote))\r\n            setNewNote('')\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}> show {showAll ? 'important' : 'all' }</button>\r\n            </div>\r\n            <ul>\r\n                {notes ? notesToShow.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/> ) : null}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    placeholder={\"submit a new note\"}\r\n                    value={newNote}\r\n                    onChange={handleNoteChange}/>\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}